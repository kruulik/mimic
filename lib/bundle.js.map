{"version":3,"sources":["webpack:///webpack/bootstrap b24d6ff9a8c0c5e14be2","webpack:///./lib/detector.js","webpack:///./lib/emoji.js","webpack:///./lib/mimic.js","webpack:///./lib/game.js","webpack:///./lib/falling_emoji.js","webpack:///./lib/announce.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;;AC7DoB;;;AAGpB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;;;AAGA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA,2DAA2D,+BAA+B,IAAI,mBAAmB,QAAQ,sCAAsC;;AAE/J,OAAO;AACP;AACA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;;;ACvJA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;;;;;;;;;;;ACzBA;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;ACPD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL,4CAA4C,WAAW;AACvD;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,yBAAyB;AAC5C;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;;AAEA;AACA;AACA;;AAEA;;AAEA;;;;;;;;;AC9OsB;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;;;;;;;;ACtDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,OAAO;AACvC;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,2BAA2B,MAAM;AACjC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,QAAQ;AACjC;;;AAGA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA","file":"./lib/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap b24d6ff9a8c0c5e14be2","import {EmojiImages} from './emoji';\n\n\nclass Detector {\n\n  constructor(options) {\n    this.game = options.game;\n    this.gameRoot = options.gameRoot;\n    this.dt_canvas = null;\n    this.dt_ctx = null;\n    this.detector = new affdex.CameraDetector(this.gameRoot);\n    this.detector.detectAllEmojis();\n    this.init = this.init.bind(this);\n    this.analyze = this.analyze.bind(this);\n    this.getMaskSize = this.getMaskSize.bind(this);\n    this.getFaceCenter = this.getFaceCenter.bind(this);\n    this.drawFeaturePoints = this.drawFeaturePoints.bind(this);\n    this.drawMask = this.drawMask.bind(this);\n    this.toggleDetector = this.toggleDetector.bind(this);\n    this.dominantEmoji = null;\n    this.toMatch = null;\n    this.frames_since_face = 0;\n    this.face_visible = false;\n    this.face = null;\n    this.image = null;\n    this.emoji_images = Object.assign({}, EmojiImages.ui, EmojiImages.falling);\n  }\n\n\n  init() {\n    this.detector.addEventListener(\"onInitializeSuccess\", () => {\n      this.dt_canvas = document.getElementById(\"face_video_canvas\");\n      this.dt_ctx = this.dt_canvas.getContext('2d');\n      const video = document.getElementById(\"face_video\");\n      this.dt_canvas.style.display = 'block';\n      video.style.display = 'none';\n      // this.analyze();\n    });\n\n    this.detector.addEventListener(\"onInitializeFailure\", () => {\n      console.log('initialize failed');\n    });\n\n  }\n\n\n  analyze(){\n    this.detector.addEventListener(\"onImageResultsSuccess\", (faces, image, timestamps) => {\n\n      this.image = image;\n\n      if (this.frames_since_face > 100 && this.face_visible){\n        this.face_visible = false;\n        // TODO also pause the game and prompt user to recenter face\n        console.log('no face detected');\n      }\n      if (faces.length > 0) {\n        this.frames_since_face = 0;\n        this.face_visible = true;\n\n        if (!this.game.playing) {\n          console.log('emojiStart');\n          this.game.playing = true;\n          this.game.emojiStart();\n        }\n\n        this.face = faces[0];\n\n        this.dominantEmoji = this.face.emojis.dominantEmoji.codePointAt(0);\n\n        document.querySelector(\".temp\").innerHTML = `dt: ${this.face.emojis.dominantEmoji}, ${this.dominantEmoji}, fe: ${this.emoji_images[this.dominantEmoji]}`;\n\n      } else {\n        this.frames_since_face++;\n      }\n    });\n\n  }\n\n  drawFeaturePoints() {\n    if (this.face !== null) {\n      let img = this.image;\n      let featurePoints = this.face.featurePoints;\n      let hRatio = this.dt_ctx.canvas.width / img.width;\n      let wRatio = this.dt_ctx.canvas.height / img.height;\n      let ratio = Math.min(hRatio, wRatio);\n\n      let maskPos = this.getFaceCenter(featurePoints);\n      let maskSize = this.getMaskSize(featurePoints);\n\n      this.dt_ctx.strokeStyle = \"#FFFFFF\";\n      this.dt_ctx.beginPath();\n      this.dt_ctx.arc(maskPos[0], maskPos[1], (maskSize), 0, 2 * Math.PI\n      );\n      this.dt_ctx.stroke();\n    }\n  }\n\n  drawMask(){\n    let img = this.image;\n    let featurePoints = this.face.featurePoints;\n    let hRatio = this.dt_ctx.canvas.width / img.width;\n    let wRatio = this.dt_ctx.canvas.height / img.height;\n    let ratio = Math.min(hRatio, wRatio);\n\n    let maskSize = this.getMaskSize(featurePoints) * 3;\n    let faceCenter = this.getFaceCenter(featurePoints);\n\n    this.dt_ctx.drawImage(this.mask, faceCenter[0] - (maskSize / 2), faceCenter[1]/2, maskSize, maskSize);\n  }\n\n  getMaskSize(fP){\n    let rx, ry, lx, ly, rxAVG, ryAVG, lxAVG, lyAVG;\n\n    rx = [fP[17].x, fP[16].x];\n    lx = [fP[18].x, fP[19].x];\n    ry = [fP[17].y, fP[16].y];\n    ly = [fP[18].y, fP[19].y];\n\n    rxAVG = rx.reduce( ( acc, num ) => acc + num, 0) / 2;\n    ryAVG = ry.reduce( ( acc, num ) => acc + num, 0) / 2;\n    lxAVG = lx.reduce( ( acc, num ) => acc + num, 0) / 2;\n    lyAVG = ly.reduce( ( acc, num ) => acc + num, 0) / 2;\n    return Math.hypot(\n      (rxAVG - lxAVG),\n      (ryAVG - lyAVG)\n    );\n  }\n\n  getFaceCenter(fP){\n    let cx = [fP[11].x,  fP[17].x, fP[18].x];\n    let cy = [fP[11].y,  fP[17].y, fP[18].y];\n\n    let cxAVG = cx.reduce( ( acc, num ) => acc + num) / cx.length;\n    let cyAVG = cy.reduce( ( acc, num ) => acc + num) / cy.length;\n    return [cxAVG, cyAVG];\n  }\n\n\n  toggleDetector() {\n    if (!this.detector.isRunning) {\n      this.detector.start();\n    } else {\n      this.detector.removeEventListener();\n      this.detector.stop();\n      clearInterval(this.game.emojiInterval);\n      this.game.playing = false;\n    }\n  }\n\n}\n\nexport default Detector;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/detector.js\n// module id = 0\n// module chunks = 0","\nexport const EmojiImages = {\n\n  falling: {\n    128540: \"assets/emoji/laughing.png\",\n    128515: \"assets/emoji/smiley.png\",\n    9786: \"assets/emoji/relaxed.png\",\n    128521: \"assets/emoji/wink.png\",\n    128535: \"assets/emoji/kissing.png\",\n    128539: \"assets/emoji/stuckOutTongue.png\",\n    128541: \"assets/emoji/stuckOutTongueWinkingEye.png\",\n    128561: \"assets/emoji/scream.png\",\n    128563: \"assets/emoji/flushed.png\",\n    128527: \"assets/emoji/smirk.png\",\n    128542: \"assets/emoji/disappointed.png\",\n    128545: \"assets/emoji/rage.png\",\n    128528: \"assets/emoji/neutral.png\",\n  },\n  ui: {\n    128128: \"assets/emoji/skull.png\",\n    128169: \"assets/emoji/poo.png\",\n    128077: \"assets/emoji/thumbUp.png\",\n    128078: \"assets/emoji/thumbDown.png\",\n    128081: \"assets/emoji/crown.png\",\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/emoji.js\n// module id = 1\n// module chunks = 0","import Detector from './detector';\nimport Game from './game';\n\ndocument.addEventListener(\"DOMContentLoaded\", function(){\n  const gameRoot = document.getElementById(\"game-root\");\n  const game = new Game(gameRoot);\n  game.init();\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/mimic.js\n// module id = 2\n// module chunks = 0","import Detector from './detector';\nimport FallingEmoji from './falling_emoji';\nimport Announce from './announce';\n\nclass Game {\n  constructor(gameRoot) {\n    this.init = this.init.bind(this);\n    this.detector = new Detector({\n      gameRoot: gameRoot,\n      game: this\n    });\n    this.ui_canvas = document.getElementById(\"ui_canvas\");\n    this.ui_ctx = ui_canvas.getContext('2d');\n    this.displayScore = document.querySelector(\".score\");\n\n    this.strikes = 0;\n    this.emojiInterval = null;\n\n    this.velocity = 2;\n    this.renderDelay = 5000;\n    this.multiplier = 1;\n    this.score = 0;\n\n    this.faceVisible = this.detector.face_visible;\n    this.playing = false;\n\n    this.fallingEmoji = {};\n    this.lastEmoji = null;\n    this.alerts = [];\n\n    this.renderEmoji = this.renderEmoji.bind(this);\n    this.getStrike = this.getStrike.bind(this);\n    this.emojiStart = this.emojiStart.bind(this);\n    this.mask = null;\n\n\n    this.dominantEmoji = null;\n\n  }\n\n  init() {\n    const toggleButton = document.getElementById(\"toggleButton\");\n    this.detector.init();\n\n    toggleButton.addEventListener(\"click\", () => {\n      this.detector.toggleDetector();\n      this.start();\n      this.detector.analyze();\n    });\n  }\n\n  emojiStart() {\n    this.emojiInterval = setInterval(() => {\n      this.renderEmoji();\n    }, this.renderDelay);\n    this.displayScore.innerHTML = 'Score: ';\n  }\n\n  start() {\n    this.lastTime = 0;\n    requestAnimationFrame(this.animate.bind(this));\n  }\n\n  gameOver() {\n    clearInterval(this.emojiInterval);\n\n    setTimeout(() => {\n      this.detector.toggleDetector();\n    }, 2500);\n  }\n\n  animate(time) {\n    const timeDelta = time - this.lastTime;\n\n    this.ui_ctx.save();\n    this.ui_ctx.clearRect(0, 0, 480, 640);\n    this.animateEmoji(timeDelta);\n    if (this.alerts.length > 0){\n      this.animateAlerts(timeDelta);\n    }\n    this.draw(this.ui_ctx);\n    this.checkMatch();\n    this.lastTime = time;\n    this.ui_ctx.restore();\n\n    requestAnimationFrame(this.animate.bind(this));\n  }\n\n  renderEmoji() {\n    let W = this.ui_canvas.width;\n    let min = 25;\n    let max = W - min;\n    let posX = Math.random() * (max - min) + min;\n\n    let emoji = new FallingEmoji({\n      game: this,\n      ctx: this.ui_ctx,\n      pos: [posX, 0],\n      vel: [0, this.velocity]\n    });\n\n    // console.log([emoji.emojiCode, this.fallingEmoji]);\n    this.fallingEmoji[emoji.emojiCode] = emoji;\n  }\n\n  animateEmoji(timeDelta){\n    for (var emojiCode in this.fallingEmoji) {\n      this.fallingEmoji[emojiCode].move(timeDelta);\n    }\n  }\n\n  animateAlerts(timeDelta){\n    // console.log('animate alert');\n    this.alerts.forEach((alert) => {\n      alert.animate(timeDelta);\n    });\n  }\n\n  draw(ctx) {\n    for (var emojiCode in this.fallingEmoji) {\n      this.fallingEmoji[emojiCode].draw(ctx);\n    }\n  }\n\n  removeEmoji(eCode){\n    this.lastEmoji = this.fallingEmoji[eCode];\n    delete this.fallingEmoji[eCode];\n  }\n\n  removeAlert(alert){\n    this.alerts.splice(this.alerts.indexOf(alert), 1);\n  }\n\n  checkMatch() {\n    var emoji = this.detector.dominantEmoji;\n    if (emoji in this.fallingEmoji) {\n      this.matched(emoji);\n      // TODO when generating emoji, amke sure there are no duplicates!\n    } else {\n      this.detector.drawFeaturePoints();\n    }\n  }\n\n  matched(eCode) {\n    let timestamp = this.fallingEmoji[eCode].timestamp;\n    this.removeEmoji(eCode);\n    this.mask_animation = 'match';\n\n    this.scorePoints(timestamp);\n    this.increaseDifficulty();\n    this.detector.mask = new Image();\n    this.detector.mask.src = this.detector.emoji_images[eCode];\n    window.setTimeout(() => {\n      this.mask_animation = 'none';\n    }, 1000);\n  }\n\n  scorePoints(timestamp) {\n    let elapsedTime = Date.now() - timestamp;\n    let score = 10 + (10000 - elapsedTime) * this.multiplier;\n    this.score += score;\n    this.announce({\n      time: elapsedTime,\n      score: score,\n    });\n\n    this.displayScore.innerHTML = `Score: ${this.score}`;\n  }\n\n  increaseDifficulty() {\n    // this.velocity += 0.25;\n    this.renderDelay -= 750;\n    this.multiplier += 1;\n    // console.log(this.renderDelay);\n  }\n\n  getStrike(){\n    this.announce({strike: this.strikes + 1});\n    this.strikes += 1;\n  }\n\n  announce(options){\n    let W = this.ui_canvas.width;\n    let min = 100;\n    let max = W - min;\n    let posX = Math.random() * (max - (min* 2)) + min;\n\n    // debugger\n    let alert = new Announce({\n      game: this,\n      ctx: this.ui_ctx,\n      canvas: this.ui_canvas,\n      pos: [posX, 100],\n      time: options.time,\n      score: options.score,\n      strike: options.strike,\n    });\n\n    this.alerts.push(alert);\n  }\n\n  // getStrike() {\n  //   let eCode, delay = 1000;\n  //   this.strikes += 1;\n  //   this.multiplier = 1;\n  //   this.mask_animation = 'miss';\n  //   switch (this.strikes) {\n  //     case 1:\n  //       eCode = 128078;\n  //       break;\n  //     case 2:\n  //       eCode = 128078;\n  //       break;\n  //     case 3:\n  //       eCode = 128169;\n  //       break;\n  //     case 4:\n  //       eCode = 128169;\n  //       break;\n  //     case 5:\n  //       eCode = 128128;\n  //       delay = 5000;\n  //       this.gameOver();\n  //       break;\n  //   }\n  //   this.detector.mask = new Image();\n  //   this.detector.mask.src = this.detector.emoji_images[eCode];\n  //   window.setTimeout(() => {\n  //     this.mask_animation = 'none';\n  //   }, delay);\n  // }\n\n  // flashMask() {\n  //   this.detector.drawMask();\n  // }\n\n}\n\nexport default Game;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/game.js\n// module id = 3\n// module chunks = 0","import { EmojiImages } from './emoji';\n\nclass FallingEmoji {\n  constructor(options) {\n    this.ctx = options.ctx;\n    this.pos = options.pos;\n    this.vel = options.vel;\n    this.game = options.game;\n    this.emojiCode = null;\n    this.emoji = null;\n    this.emoji_images = EmojiImages.falling;\n\n    this.timestamp = Date.now();\n    this.generateEmoji(this.ctx);\n  }\n\n  generateEmoji(ctx){\n    let values = Object.keys(this.emoji_images);\n\n    let available = values.filter((value) => {\n      if ( !(Object.keys(this.game.fallingEmoji).includes(value)) && (value !== '128528')) {\n        return value;\n      }\n    });\n    this.emojiCode = available[Math.floor (Math.random() * available.length)];\n    this.emoji = new Image();\n    this.emoji.src = this.emoji_images[this.emojiCode];\n    this.draw(ctx);\n    // console.log([this.emojiCode, this.game.lastEmoji]);\n  }\n\n  draw(ctx){\n    ctx.drawImage(this.emoji, this.pos[0], this.pos[1], 100, 100);\n  }\n\n  move(timeDelta) {\n    const velocityScale = timeDelta / NORMAL_FRAME_TIME_DELTA,\n        offsetX = this.vel[0] * velocityScale,\n        offsetY = this.vel[1] * velocityScale;\n\n    this.pos = [this.pos[0] + offsetX, this.pos[1] + offsetY];\n    if (this.pos[1] > 640) {\n      this.remove();\n      this.game.getStrike();\n    }\n  }\n\n  remove() {\n    this.game.removeEmoji(this.emojiCode);\n  }\n\n}\n\nconst NORMAL_FRAME_TIME_DELTA = 1000/60;\n\nexport default FallingEmoji;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/falling_emoji.js\n// module id = 4\n// module chunks = 0","\nclass Announce {\n  constructor(options){\n    this.game = options.game;\n    this.ctx = options.ctx;\n    this.canvas = options.canvas;\n    this.time = options.time;\n    this.score = options.score;\n    this.strike = options.strike;\n    this.pos =  options.pos;\n    this.vel = [0, 2];\n    this.alert = null;\n    this.generateAlert(options);\n  }\n\n  generateAlert(options){\n    let a = arguments[0];\n    // debugger\n    if (a.strike) {\n      this.alert = this.strikeAnimation;\n    } else if (a.score) {\n      this.alert = this.scoreAnimation;\n    }\n    let move = setTimeout(() => {\n      this.game.removeAlert(this);\n      clearTimeout(move);\n    }, 600);\n  }\n\n\n  strikeAnimation(){\n    let strike = this.strike;\n    // console.log([this.pos[0], this.pos[1]]);\n    this.ctx.font = \"36px Josefin Sans\";\n    this.ctx.textAlign = \"center\";\n    this.ctx.fillStyle = \"red\";\n    this.ctx.fillText(`Strike ${strike} !!`, this.pos[0], this.pos[1]);\n  }\n  scoreAnimation(){\n    let message;\n\n    if (this.time < 500) {\n      this.messageAnimation('Perfect!');\n    } else if (this.time >= 500 && this.time < 1000) {\n      this.messageAnimation('Good');\n    }\n\n    let score = this.score;\n    // console.log([this.pos[0], this.pos[1]]);\n    this.ctx.font = \"36px Josefin Sans\";\n    this.ctx.textAlign = \"center\";\n    this.ctx.fillStyle = \"green\";\n    this.ctx.fillText(`+ ${score} !!`, this.pos[0], this.pos[1]);\n  }\n\n  messageAnimation(message){\n    let strike = this.strike;\n    // console.log([this.pos[0], this.pos[1]]);\n    this.ctx.font = \"36px Josefin Sans\";\n    this.ctx.textAlign = \"center\";\n    this.ctx.fillStyle = \"green\";\n    this.ctx.fillText(`${message}`, this.pos[0], this.pos[1] - 50);\n  }\n\n\n  animate(timeDelta) {\n    const velocityScale = timeDelta / NORMAL_FRAME_TIME_DELTA,\n        offsetY = this.vel[1] * velocityScale;\n    this.pos = [this.pos[0], this.pos[1] - offsetY];\n\n    this.alert();\n\n  }\n\n}\n\nconst NORMAL_FRAME_TIME_DELTA = 1000/60;\n\nexport default Announce;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/announce.js\n// module id = 5\n// module chunks = 0"],"sourceRoot":""}